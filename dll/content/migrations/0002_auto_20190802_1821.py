# Generated by Django 2.2.4 on 2019-08-02 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dll.user.utils
import filer.fields.image
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('content', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='content',
            name='author',
            field=models.ForeignKey(on_delete=models.SET(dll.user.utils.get_default_tuhh_user), to=settings.AUTH_USER_MODEL, verbose_name='Autor'),
        ),
        migrations.AddField(
            model_name='content',
            name='co_authors',
            field=models.ManyToManyField(related_name='collaborative_content', to=settings.AUTH_USER_MODEL, verbose_name='Kollaborateure'),
        ),
        migrations.AddField(
            model_name='content',
            name='competences',
            field=models.ManyToManyField(to='content.Competence', verbose_name='Kompetenzen'),
        ),
        migrations.AddField(
            model_name='content',
            name='image',
            field=filer.fields.image.FilerImageField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL, verbose_name='Anzeigebild'),
        ),
        migrations.AddField(
            model_name='content',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_content.content_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='content',
            name='publisher_linked',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publisher_draft', to='content.Content'),
        ),
        migrations.AddField(
            model_name='content',
            name='related_content',
            field=models.ManyToManyField(related_name='_content_related_content_+', to='content.Content', verbose_name='Verwandte Tools/Trends/Unterrichtsbausteine'),
        ),
        migrations.AddField(
            model_name='content',
            name='sub_competences',
            field=models.ManyToManyField(to='content.SubCompetence', verbose_name='Subkompetenzen'),
        ),
        migrations.AddField(
            model_name='content',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='tool',
            name='applications',
            field=models.ManyToManyField(to='content.ToolApplication', verbose_name='Anwendung'),
        ),
        migrations.AddField(
            model_name='tool',
            name='operating_systems',
            field=models.ManyToManyField(to='content.OperatingSystem', verbose_name='Betriebssystem'),
        ),
        migrations.AddField(
            model_name='tool',
            name='url',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='content.ContentLink'),
        ),
        migrations.AddField(
            model_name='teachingmodule',
            name='school_types',
            field=models.ManyToManyField(to='content.SchoolType', verbose_name='Schulform'),
        ),
        migrations.AddField(
            model_name='teachingmodule',
            name='subjects',
            field=models.ManyToManyField(to='content.Subject', verbose_name='Unterrichtsfach'),
        ),
    ]
